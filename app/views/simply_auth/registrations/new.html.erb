<div class='container'>
  <div class='d-flex flex-row'>
    <h2 class='mr-auto'>Sign Up</h2>
    <div>
      <span class='mr-2'>Already a member?</span>
      <%= link_to "Log In", new_session_path, class: "btn btn-secondary" %>
    </div>
  </div>
  <%= form_for @user, url: [:registrations], html: {class: "needs-validation", novalidate: true} do |f| %>
    <div class='form-group'>
      <%= f.label :name, "Name *" %>
      <%= f.text_field :name, class: "form-control #{"is-invalid" if @user.errors[:name].any? }", required: true %>
      <div class='invalid-feedback'>
        <% if @user.errors[:name].any? %>
          <%= @user.errors[:name].map{|m| "Name #{m}."}.join(" ") %>
        <% else %>
          Please provide your name.
        <% end %>
      </div>
    </div>
    <div class='form-group'>
      <%= f.label :email, "Email *" %>
      <%= f.text_field :email, class: "form-control #{"is-invalid" if @user.errors[:email].any? }", required: true, type: :email %>
      <div class='invalid-feedback'>
        <% if @user.errors[:email].grep(/taken/).any? %>
          That email is already registered. Would you like to <%= link_to "sign in", new_session_path(session: {email: @user.email}) %>?
        <% elsif @user.errors[:email].any? %>
          <%= @user.errors[:email].map{|m| "Email #{m}."}.join(" ") %>
        <% else %>
          Please provide your email.
        <% end %>
      </div>
    </div>
    <div class='form-group'>
      <%= f.label :password, "Password *" %>
      <%= f.password_field :password, class: "form-control #{"is-invalid" if @user.errors[:password].any? }", required: true %>
      <div class='invalid-feedback'>
        <% if @user.errors[:password].any? %>
          <%= @user.errors[:password].map{|m| "Password #{m}."}.join(" ") %>
        <% else %>
          Please provide a password.
        <% end %>
      </div>
    </div>
    <%= render partial: "additional_fields", locals: {form: f} %>
    <%= f.submit "Sign Up", class: "btn btn-primary" %>
  <% end %>

  <script>
  (function() {
    'use strict';
    window.addEventListener('load', function() {
      var forms = document.getElementsByClassName('needs-validation');
      var validation = Array.prototype.filter.call(forms, function(form) {
        form.addEventListener('submit', function(event) {
          if (form.checkValidity() === false) {
            event.preventDefault();
            event.stopPropagation();
          }
          form.classList.add('was-validated');
        }, false);
      });
    }, false);
  })();
  </script>
  <style>
    .field_with_errors ~ .invalid-feedback,
    .field_with_errors ~ .invalid-tooltip {
      display: block;
    }
  </style>
</div>